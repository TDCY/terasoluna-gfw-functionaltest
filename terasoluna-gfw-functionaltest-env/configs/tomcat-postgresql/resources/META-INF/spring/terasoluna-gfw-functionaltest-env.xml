<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="dateFactory" class="org.terasoluna.gfw.common.date.DefaultDateFactory" />

    <jee:jndi-lookup id="realDataSource" jndi-name="jdbc/dataSource"
        expected-type="javax.sql.DataSource" />

    <bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <constructor-arg index="0" ref="realDataSource" />
    </bean>

    <!-- to be modified for PostgreSQL -->
    <bean id="integerSeq" class="org.terasoluna.gfw.common.sequencer.JdbcSequencer">
        <property name="dataSource" ref="dataSource" />
        <property name="sequenceClass" value="java.lang.Integer" />
        <property name="nextValueQuery" value="SELECT nextval('INTEGER_SEQ') AS seq" />
        <property name="currentValueQuery" value="SELECT currval('INTEGER_SEQ') AS seq" />
    </bean>

    <bean id="longSeq" class="org.terasoluna.gfw.common.sequencer.JdbcSequencer">
        <property name="dataSource" ref="dataSource" />
        <property name="sequenceClass" value="java.lang.Long" />
        <property name="nextValueQuery" value="SELECT nextval('LONG_SEQ') AS seq" />
        <property name="currentValueQuery" value="SELECT currval('LONG_SEQ') AS seq" />
    </bean>

    <bean id="bigIntegerSeq" class="org.terasoluna.gfw.common.sequencer.JdbcSequencer">
        <property name="dataSource" ref="dataSource" />
        <property name="sequenceClass" value="java.math.BigInteger" />
        <property name="nextValueQuery"
            value="SELECT nextval('BIG_INTEGER_SEQ') AS seq" />
        <property name="currentValueQuery"
            value="SELECT currval('BIG_INTEGER_SEQ') AS seq" />
    </bean>

    <bean id="stringSeq" class="org.terasoluna.gfw.common.sequencer.JdbcSequencer">
        <property name="dataSource" ref="dataSource" />
        <property name="sequenceClass" value="java.lang.String" />
        <property name="nextValueQuery"
            value="SELECT TO_CHAR(nextval('STRING_SEQ'),'FM0000000000') AS seq" />
        <property name="currentValueQuery"
            value="SELECT TO_CHAR(currval('STRING_SEQ'),'FM0000000000') AS seq" />
    </bean>

    <bean id="notFoundSeq" class="org.terasoluna.gfw.common.sequencer.JdbcSequencer">
        <property name="dataSource" ref="dataSource" />
        <property name="sequenceClass" value="java.lang.Integer" />
        <property name="nextValueQuery" value="SELECT nextval('NOT_FOUND_SEQ') AS seq" />
        <property name="currentValueQuery" value="SELECT currval('NOT_FOUND_SEQ') AS seq" />
    </bean>

    <bean id="dataSourceTransactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="jpaTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        id="entityManagerFactory" parent="abstractEntityManagerFactory">
        <property name="dataSource" ref="dataSource" />
    </bean>


</beans>
